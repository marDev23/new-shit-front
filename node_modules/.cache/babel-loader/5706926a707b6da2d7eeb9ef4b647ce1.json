{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  me {\\n    address {\\n      id\\n      province\\n      municipal\\n      baranggay\\n      zip\\n      fee\\n      isPickUpAvailable\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  cart {\\n    id\\n    product {\\n      id\\n      name\\n      price\\n      description\\n    }\\n    quantity\\n  }\\n}\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  addresses {\\n    id\\n    zip\\n    province\\n    municipal\\n    baranggay\\n    fee\\n    isPickUpAvailable\\n  }\\n}\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  cart {\\n    id\\n    quantity\\n    product {\\n      id\\n      price\\n      name\\n      description\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\nmutation addToCart($productId: ID, $quantity: Float) {\\n  addToCart(productId: $productId, quantity: $quantity) {\\n    id\\n    quantity\\n    product {\\n      id\\n      price\\n      description\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\nquery Product($name: String!){\\n  product(name: $name) {\\n    id\\n    name\\n    description\\n    price\\n    category {\\n      id\\n      category\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  products{\\n    id\\n    category{\\n      id\\n      category\\n    }\\n    description\\n    name\\n    price\\n  }\\n}\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n\\n{\\n  productTypes {\\n    id\\n    category\\n  }\\n}\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\nquery ProductByCategory($categoryId: ID!){\\n  productByCategory(categoryId: $categoryId) {\\n    id\\n    name\\n    price\\n    category{\\n      id\\n      category\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\nquery Category($category: String!){\\n  productType(category: $category) {\\n    id\\n    category\\n  }\\n}\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation deleteToCart($id: ID) {\\n  deleteToCart(id: $id){\\n    id\\n    product {\\n      id\\n      name\\n      description\\n      price\\n    }\\n    quantity\\n  }\\n}\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updateQuantity($id: ID!, $quantity: Float!) {\\n    updateQuantity (id: $id, quantity: $quantity) {\\n    \\tid\\n    \\tquantity\\n    \\tproduct {\\n    \\t\\tid\\n    \\t\\tname\\n    \\t\\tdescription\\n    \\t\\tprice\\n    \\t}\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  me {\\n    id\\n    name\\n    mobile\\n    email\\n    cart {\\n      id\\n      quantity\\n      product {\\n      \\tid\\n        description\\n        name\\n        price\\n      }\\n    } \\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  isSignIn\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var IS_SIGNED = gql(_templateObject());\nexport var USER_DATA = gql(_templateObject2());\nexport var UPDATE_QUANTITY = gql(_templateObject3());\nexport var DELETE_CART_ITEM = gql(_templateObject4());\nexport var ALL_CATEGORIES = gql(_templateObject5());\nexport var ALL_ITEMS_BY_CATEGORY = gql(_templateObject6());\nexport var PRODUCT_CATEGORIES = gql(_templateObject7());\nexport var ALL_PRODUCTS_FEATURED = gql(_templateObject8());\nexport var SINGLE_PRODUCT = gql(_templateObject9());\nexport var ADD_TO_CART = gql(_templateObject10());\nexport var MY_CART = gql(_templateObject11());\nexport var ALL_ADDRESS = gql(_templateObject12());\nexport var ALL_CART = gql(_templateObject13());\nexport var MY_ADDRESS = gql(_templateObject14());","map":{"version":3,"sources":["/home/dev-marvin/Desktop/new-shit/src/QUERIES/ALL_QUERIES.js"],"names":["gql","IS_SIGNED","USER_DATA","UPDATE_QUANTITY","DELETE_CART_ITEM","ALL_CATEGORIES","ALL_ITEMS_BY_CATEGORY","PRODUCT_CATEGORIES","ALL_PRODUCTS_FEATURED","SINGLE_PRODUCT","ADD_TO_CART","MY_CART","ALL_ADDRESS","ALL_CART","MY_ADDRESS"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,IAAMC,SAAS,GAAGD,GAAH,mBAAf;AAMP,OAAO,IAAME,SAAS,GAAGF,GAAH,oBAAf;AAoBP,OAAO,IAAMG,eAAe,GAAGH,GAAH,oBAArB;AAcP,OAAO,IAAMI,gBAAgB,GAAGJ,GAAH,oBAAtB;AAcP,OAAO,IAAMK,cAAc,GAAGL,GAAH,oBAApB;AASP,OAAO,IAAMM,qBAAqB,GAAGN,GAAH,oBAA3B;AAaP,OAAO,IAAMO,kBAAkB,GAAGP,GAAH,oBAAxB;AASP,OAAO,IAAMQ,qBAAqB,GAAGR,GAAH,oBAA3B;AAcP,OAAO,IAAMS,cAAc,GAAGT,GAAH,oBAApB;AAcP,OAAO,IAAMU,WAAW,GAAGV,GAAH,qBAAjB;AAaP,OAAO,IAAMW,OAAO,GAAGX,GAAH,qBAAb;AAcP,OAAO,IAAMY,WAAW,GAAGZ,GAAH,qBAAjB;AAaP,OAAO,IAAMa,QAAQ,GAAGb,GAAH,qBAAd;AAcP,OAAO,IAAMc,UAAU,GAAGd,GAAH,qBAAhB","sourcesContent":["import gql from 'graphql-tag'\n\nexport const IS_SIGNED = gql `\n{\n  isSignIn\n}\n`\n\nexport const USER_DATA = gql `\n{\n  me {\n    id\n    name\n    mobile\n    email\n    cart {\n      id\n      quantity\n      product {\n      \tid\n        description\n        name\n        price\n      }\n    } \n  }\n}\n`\nexport const UPDATE_QUANTITY = gql `\n  mutation updateQuantity($id: ID!, $quantity: Float!) {\n    updateQuantity (id: $id, quantity: $quantity) {\n    \tid\n    \tquantity\n    \tproduct {\n    \t\tid\n    \t\tname\n    \t\tdescription\n    \t\tprice\n    \t}\n    }\n  }\n`\nexport const DELETE_CART_ITEM = gql `\n  mutation deleteToCart($id: ID) {\n  deleteToCart(id: $id){\n    id\n    product {\n      id\n      name\n      description\n      price\n    }\n    quantity\n  }\n}\n`\nexport const ALL_CATEGORIES = gql `\nquery Category($category: String!){\n  productType(category: $category) {\n    id\n    category\n  }\n}\n`\n\nexport const ALL_ITEMS_BY_CATEGORY = gql `\nquery ProductByCategory($categoryId: ID!){\n  productByCategory(categoryId: $categoryId) {\n    id\n    name\n    price\n    category{\n      id\n      category\n    }\n  }\n}\n`\nexport const PRODUCT_CATEGORIES = gql `\n\n{\n  productTypes {\n    id\n    category\n  }\n}\n`\nexport const ALL_PRODUCTS_FEATURED = gql `\n{\n  products{\n    id\n    category{\n      id\n      category\n    }\n    description\n    name\n    price\n  }\n}\n`\nexport const SINGLE_PRODUCT = gql `\nquery Product($name: String!){\n  product(name: $name) {\n    id\n    name\n    description\n    price\n    category {\n      id\n      category\n    }\n  }\n}\n`\nexport const ADD_TO_CART = gql `\nmutation addToCart($productId: ID, $quantity: Float) {\n  addToCart(productId: $productId, quantity: $quantity) {\n    id\n    quantity\n    product {\n      id\n      price\n      description\n    }\n  }\n}\n`\nexport const MY_CART = gql `\n{\n  cart {\n    id\n    quantity\n    product {\n      id\n      price\n      name\n      description\n    }\n  }\n}\n`\nexport const ALL_ADDRESS = gql `\n{\n  addresses {\n    id\n    zip\n    province\n    municipal\n    baranggay\n    fee\n    isPickUpAvailable\n  }\n}\n`\nexport const ALL_CART = gql `\n{\n  cart {\n    id\n    product {\n      id\n      name\n      price\n      description\n    }\n    quantity\n  }\n}\n`\nexport const MY_ADDRESS = gql `\n{\n  me {\n    address {\n      id\n      province\n      municipal\n      baranggay\n      zip\n      fee\n      isPickUpAvailable\n    }\n  }\n}\n`"]},"metadata":{},"sourceType":"module"}