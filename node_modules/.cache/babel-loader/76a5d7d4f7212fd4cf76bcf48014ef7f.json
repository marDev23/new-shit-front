{"ast":null,"code":"import _toConsumableArray from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { USER_DATA } from '../QUERIES/ALL_QUERIES';\nexport var CACHE_CART_DATA_PLUS = function CACHE_CART_DATA_PLUS(cache, _ref) {\n  var updateQuantity = _ref.data.updateQuantity;\n  console.log(cache);\n\n  var id = updateQuantity.id,\n      product = updateQuantity.product,\n      quantity = updateQuantity.quantity,\n      other = _objectWithoutProperties(updateQuantity, [\"id\", \"product\", \"quantity\"]);\n\n  var updatedQuantityData = _objectSpread({\n    id: id,\n    quantity: quantity + 1,\n    product: product\n  }, other);\n\n  var _cache$readQuery = cache.readQuery({\n    query: USER_DATA\n  }),\n      me = _cache$readQuery.me;\n\n  var name = me.name,\n      mobile = me.mobile,\n      email = me.email,\n      cart = me.cart,\n      rest = _objectWithoutProperties(me, [\"name\", \"mobile\", \"email\", \"cart\"]);\n\n  var pushCacheData = cart.filter(function (x) {\n    return x.id !== updatedQuantityData.id;\n  });\n\n  var arrayOfCache = function arrayOfCache(xCache, yCache) {\n    if (Array.isArray(xCache) === true) {\n      return [_objectSpread({}, yCache)].concat(_toConsumableArray(xCache));\n    }\n\n    return [_objectSpread({}, yCache), _objectSpread({}, xCache)];\n  };\n\n  cache.writeQuery({\n    query: USER_DATA,\n    data: {\n      me: _objectSpread({\n        name: name,\n        mobile: mobile,\n        email: email,\n        cart: arrayOfCache(pushCacheData, updatedQuantityData)\n      }, rest)\n    }\n  });\n};\nexport var CACHE_CART_DATA_MINUS = function CACHE_CART_DATA_MINUS(cache, _ref2) {\n  var updateQuantity = _ref2.data.updateQuantity;\n  console.log(cache);\n\n  var id = updateQuantity.id,\n      product = updateQuantity.product,\n      quantity = updateQuantity.quantity,\n      other = _objectWithoutProperties(updateQuantity, [\"id\", \"product\", \"quantity\"]);\n\n  var updatedQuantityData = _objectSpread({\n    id: id,\n    quantity: quantity - 1,\n    product: product\n  }, other);\n\n  var _cache$readQuery2 = cache.readQuery({\n    query: USER_DATA\n  }),\n      me = _cache$readQuery2.me;\n\n  var name = me.name,\n      mobile = me.mobile,\n      email = me.email,\n      cart = me.cart,\n      rest = _objectWithoutProperties(me, [\"name\", \"mobile\", \"email\", \"cart\"]);\n\n  var pushCacheData = cart.filter(function (x) {\n    return x.id !== updatedQuantityData.id;\n  });\n\n  var arrayOfCache = function arrayOfCache(xCache, yCache) {\n    if (Array.isArray(xCache) === true) {\n      return [_objectSpread({}, yCache)].concat(_toConsumableArray(xCache));\n    }\n\n    return [_objectSpread({}, yCache), _objectSpread({}, xCache)];\n  };\n\n  cache.writeQuery({\n    query: USER_DATA,\n    data: {\n      me: _objectSpread({\n        name: name,\n        mobile: mobile,\n        email: email,\n        cart: arrayOfCache(pushCacheData, updatedQuantityData)\n      }, rest)\n    }\n  });\n};\nexport var CACHE_CART_DATA_REMOVE = function CACHE_CART_DATA_REMOVE(cache, _ref3) {\n  var deleteToCart = _ref3.data.deleteToCart;\n  console.log(deleteToCart);\n\n  var _cache$readQuery3 = cache.readQuery({\n    query: USER_DATA\n  }),\n      _cache$readQuery3$me = _cache$readQuery3.me,\n      cart = _cache$readQuery3$me.cart,\n      otherInfo = _objectWithoutProperties(_cache$readQuery3$me, [\"cart\"]);\n\n  cache.writeQuery({\n    query: USER_DATA,\n    data: {\n      me: _objectSpread({\n        cart: cart.filter(function (x) {\n          return x.id !== deleteToCart.id;\n        })\n      }, otherInfo)\n    }\n  });\n};","map":{"version":3,"sources":["/home/dev-marvin/Desktop/new-shit/src/MUTATIONS/CACHE_CART_DATA.js"],"names":["USER_DATA","CACHE_CART_DATA_PLUS","cache","updateQuantity","data","console","log","id","product","quantity","other","updatedQuantityData","readQuery","query","me","name","mobile","email","cart","rest","pushCacheData","filter","x","arrayOfCache","xCache","yCache","Array","isArray","writeQuery","CACHE_CART_DATA_MINUS","CACHE_CART_DATA_REMOVE","deleteToCart","otherInfo"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,wBAA1B;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,QAAyC;AAAA,MAAvBC,cAAuB,QAA/BC,IAA+B,CAAvBD,cAAuB;AAC3EE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AAD2E,MAEnEK,EAFmE,GAE/BJ,cAF+B,CAEnEI,EAFmE;AAAA,MAE/DC,OAF+D,GAE/BL,cAF+B,CAE/DK,OAF+D;AAAA,MAEtDC,QAFsD,GAE/BN,cAF+B,CAEtDM,QAFsD;AAAA,MAEzCC,KAFyC,4BAE/BP,cAF+B;;AAG3E,MAAMQ,mBAAmB;AAAKJ,IAAAA,EAAE,EAAFA,EAAL;AAASE,IAAAA,QAAQ,EAAEA,QAAQ,GAAG,CAA9B;AAAiCD,IAAAA,OAAO,EAAPA;AAAjC,KAA6CE,KAA7C,CAAzB;;AAH2E,yBAI5DR,KAAK,CAACU,SAAN,CAAgB;AAC7BC,IAAAA,KAAK,EAAEb;AADsB,GAAhB,CAJ4D;AAAA,MAInEc,EAJmE,oBAInEA,EAJmE;;AAAA,MAOnEC,IAPmE,GAO5BD,EAP4B,CAOnEC,IAPmE;AAAA,MAO7DC,MAP6D,GAO5BF,EAP4B,CAO7DE,MAP6D;AAAA,MAOrDC,KAPqD,GAO5BH,EAP4B,CAOrDG,KAPqD;AAAA,MAO9CC,IAP8C,GAO5BJ,EAP4B,CAO9CI,IAP8C;AAAA,MAOrCC,IAPqC,4BAO5BL,EAP4B;;AAQ3E,MAAMM,aAAa,GAAGF,IAAI,CAACG,MAAL,CAAY,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACf,EAAF,KAASI,mBAAmB,CAACJ,EAAjC;AAAA,GAAb,CAAtB;;AACA,MAAMgB,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,MAAT,EAAoB;AACvC,QAAIC,KAAK,CAACC,OAAN,CAAcH,MAAd,MAA0B,IAA9B,EAAqC;AACnC,gCAAYC,MAAZ,6BAAwBD,MAAxB;AACD;;AACD,WAAO,mBAAKC,MAAL,qBAAkBD,MAAlB,EAAP;AACD,GALD;;AAMAtB,EAAAA,KAAK,CAAC0B,UAAN,CAAiB;AACff,IAAAA,KAAK,EAAEb,SADQ;AAEfI,IAAAA,IAAI,EAAE;AACJU,MAAAA,EAAE;AACAC,QAAAA,IAAI,EAAEA,IADN;AAEAC,QAAAA,MAAM,EAAEA,MAFR;AAGAC,QAAAA,KAAK,EAAEA,KAHP;AAIAC,QAAAA,IAAI,EAAEK,YAAY,CAACH,aAAD,EAAgBT,mBAAhB;AAJlB,SAKGQ,IALH;AADE;AAFS,GAAjB;AAYA,CA3BK;AA6BN,OAAO,IAAMU,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAC3B,KAAD,SAAyC;AAAA,MAAvBC,cAAuB,SAA/BC,IAA+B,CAAvBD,cAAuB;AAC7EE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AAD6E,MAErEK,EAFqE,GAEjCJ,cAFiC,CAErEI,EAFqE;AAAA,MAEjEC,OAFiE,GAEjCL,cAFiC,CAEjEK,OAFiE;AAAA,MAExDC,QAFwD,GAEjCN,cAFiC,CAExDM,QAFwD;AAAA,MAE3CC,KAF2C,4BAEjCP,cAFiC;;AAG7E,MAAMQ,mBAAmB;AAAKJ,IAAAA,EAAE,EAAFA,EAAL;AAASE,IAAAA,QAAQ,EAAEA,QAAQ,GAAG,CAA9B;AAAiCD,IAAAA,OAAO,EAAPA;AAAjC,KAA6CE,KAA7C,CAAzB;;AAH6E,0BAI9DR,KAAK,CAACU,SAAN,CAAgB;AAC7BC,IAAAA,KAAK,EAAEb;AADsB,GAAhB,CAJ8D;AAAA,MAIrEc,EAJqE,qBAIrEA,EAJqE;;AAAA,MAOrEC,IAPqE,GAO9BD,EAP8B,CAOrEC,IAPqE;AAAA,MAO/DC,MAP+D,GAO9BF,EAP8B,CAO/DE,MAP+D;AAAA,MAOvDC,KAPuD,GAO9BH,EAP8B,CAOvDG,KAPuD;AAAA,MAOhDC,IAPgD,GAO9BJ,EAP8B,CAOhDI,IAPgD;AAAA,MAOvCC,IAPuC,4BAO9BL,EAP8B;;AAQ7E,MAAMM,aAAa,GAAGF,IAAI,CAACG,MAAL,CAAY,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACf,EAAF,KAASI,mBAAmB,CAACJ,EAAjC;AAAA,GAAb,CAAtB;;AACA,MAAMgB,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,MAAT,EAAoB;AACvC,QAAIC,KAAK,CAACC,OAAN,CAAcH,MAAd,MAA0B,IAA9B,EAAqC;AACnC,gCAAYC,MAAZ,6BAAwBD,MAAxB;AACD;;AACD,WAAO,mBAAKC,MAAL,qBAAkBD,MAAlB,EAAP;AACD,GALD;;AAMAtB,EAAAA,KAAK,CAAC0B,UAAN,CAAiB;AACff,IAAAA,KAAK,EAAEb,SADQ;AAEfI,IAAAA,IAAI,EAAE;AACJU,MAAAA,EAAE;AACAC,QAAAA,IAAI,EAAEA,IADN;AAEAC,QAAAA,MAAM,EAAEA,MAFR;AAGAC,QAAAA,KAAK,EAAEA,KAHP;AAIAC,QAAAA,IAAI,EAAEK,YAAY,CAACH,aAAD,EAAgBT,mBAAhB;AAJlB,SAKGQ,IALH;AADE;AAFS,GAAjB;AAYA,CA3BM;AA6BR,OAAO,IAAMW,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAC5B,KAAD,SAAuC;AAAA,MAArB6B,YAAqB,SAA7B3B,IAA6B,CAArB2B,YAAqB;AAC3E1B,EAAAA,OAAO,CAACC,GAAR,CAAYyB,YAAZ;;AAD2E,0BAErC7B,KAAK,CAACU,SAAN,CAAgB;AACpDC,IAAAA,KAAK,EAAEb;AAD6C,GAAhB,CAFqC;AAAA,+CAEnEc,EAFmE;AAAA,MAE7DI,IAF6D,wBAE7DA,IAF6D;AAAA,MAEpDc,SAFoD;;AAM3E9B,EAAAA,KAAK,CAAC0B,UAAN,CAAiB;AACff,IAAAA,KAAK,EAAEb,SADQ;AAEfI,IAAAA,IAAI,EAAE;AACJU,MAAAA,EAAE;AACAI,QAAAA,IAAI,EAAEA,IAAI,CAACG,MAAL,CAAY,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACf,EAAF,KAASwB,YAAY,CAACxB,EAA1B;AAAA,SAAb;AADN,SAEGyB,SAFH;AADE;AAFS,GAAjB;AAUA,CAhBK","sourcesContent":["import { USER_DATA } from '../QUERIES/ALL_QUERIES'\n\nexport const CACHE_CART_DATA_PLUS = (cache, { data: { updateQuantity } }) => {\n  console.log(cache)\n  const { id, product, quantity, ...other } = updateQuantity\n  const updatedQuantityData = { id, quantity: quantity + 1, product, ...other }\n  const { me } = cache.readQuery({\n    query: USER_DATA\n  })\n  const { name, mobile, email, cart, ...rest } = me\n  const pushCacheData = cart.filter(x => x.id !== updatedQuantityData.id)\n  const arrayOfCache = (xCache, yCache) => {\n    if (Array.isArray(xCache) === true ) {\n      return [{...yCache}, ...xCache]\n    }\n    return [{...yCache}, {...xCache}]\n  }\n  cache.writeQuery({\n    query: USER_DATA,\n    data: {\n      me: {\n        name: name,\n        mobile: mobile,\n        email: email,\n        cart: arrayOfCache(pushCacheData, updatedQuantityData),\n        ...rest\n      }\n    }\n  })\n }\n\n export const CACHE_CART_DATA_MINUS = (cache, { data: { updateQuantity } }) => {\n  console.log(cache)\n  const { id, product, quantity, ...other } = updateQuantity\n  const updatedQuantityData = { id, quantity: quantity - 1, product, ...other }\n  const { me } = cache.readQuery({\n    query: USER_DATA\n  })\n  const { name, mobile, email, cart, ...rest } = me\n  const pushCacheData = cart.filter(x => x.id !== updatedQuantityData.id)\n  const arrayOfCache = (xCache, yCache) => {\n    if (Array.isArray(xCache) === true ) {\n      return [{...yCache}, ...xCache]\n    }\n    return [{...yCache}, {...xCache}]\n  }\n  cache.writeQuery({\n    query: USER_DATA,\n    data: {\n      me: {\n        name: name,\n        mobile: mobile,\n        email: email,\n        cart: arrayOfCache(pushCacheData, updatedQuantityData),\n        ...rest\n      }\n    }\n  })\n }\n\nexport const CACHE_CART_DATA_REMOVE = (cache, { data: { deleteToCart } }) => {\n  console.log(deleteToCart)\n  const { me: { cart, ...otherInfo} } = cache.readQuery({\n    query: USER_DATA\n  })\n\n  cache.writeQuery({\n    query: USER_DATA,\n    data: {\n      me: {\n        cart: cart.filter(x => x.id !== deleteToCart.id),\n        ...otherInfo\n      }\n    }\n  })\n\n }"]},"metadata":{},"sourceType":"module"}