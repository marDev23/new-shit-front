{"ast":null,"code":"import _classCallCheck from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev-marvin/Desktop/new-shit/src/Components/Checkout/Confirmation.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Form, Divider, Container, Button, Menu, Header } from 'semantic-ui-react';\nimport { Query, Mutation } from 'react-apollo';\nimport { ALL_CART, ADDRESS, ORDER_TYPE } from '../../QUERIES/ALL_QUERIES';\n\nvar ProductConfirm = function ProductConfirm(_ref) {\n  var tray = _ref.tray;\n  return React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Menu.Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Header, {\n    color: \"orange\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, tray.product.name.toUpperCase(), \" X \", tray.quantity)), React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Header, {\n    color: \"orange\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"P \", tray.product.price.toLocaleString()))));\n};\n\nvar subTotal = function subTotal(arr) {\n  return arr.reduce(function (sum, i) {\n    var n = sum + i.product.price * i.quantity;\n    return n.toLocaleString();\n  }, 0);\n};\n\nvar grandTotal = function grandTotal(arr, hit) {\n  return arr.reduce(function (sum, i) {\n    var n = sum + i.product.price * i.quantity;\n    var m = n + parseInt(hit);\n    return m.toLocaleString();\n  }, 0);\n};\n\nvar Confirmation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Confirmation, _Component);\n\n  function Confirmation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Confirmation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Confirmation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.back = function (e) {\n      e.preventDefault();\n\n      _this.props.prevStep();\n    };\n\n    return _this;\n  }\n\n  _createClass(Confirmation, [{\n    key: \"render\",\n    value: function render() {\n      var delivery = this.props.delivery;\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        fluid: true,\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Menu.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Products\"), React.createElement(Menu.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: ALL_CART,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, function (_ref2) {\n        var loading = _ref2.loading,\n            data = _ref2.data;\n        if (loading) return '';\n        console.log(data);\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, data.cart.map(function (x) {\n          return React.createElement(ProductConfirm, {\n            key: x.id,\n            tray: x,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n        }));\n      }))), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Menu.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Address\"), React.createElement(Menu.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: ADDRESS,\n        variables: {\n          id: delivery.addressId\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, function (_ref3) {\n        var loading = _ref3.loading,\n            address = _ref3.data.address;\n        if (loading) return '';\n        return React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Header, {\n          size: \"small\",\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, address.baranggay.toUpperCase(), \", \", address.municipal.toUpperCase(), \", \", address.province.toUpperCase(), \", Philippines \", address.zip));\n      }))), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Menu.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Total\"), React.createElement(Menu.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: ORDER_TYPE,\n        variables: {\n          id: delivery.deliveryOption\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, function (_ref4) {\n        var loadingDOption = _ref4.loading,\n            orderType = _ref4.data.orderType;\n        return React.createElement(Query, {\n          query: ALL_CART,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, function (_ref5) {\n          var loadingACart = _ref5.loading,\n              cart = _ref5.data.cart;\n          return React.createElement(Query, {\n            query: ADDRESS,\n            variables: {\n              id: delivery.addressId\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, function (_ref6) {\n            var loadingAShipment = _ref6.loading,\n                address = _ref6.data.address;\n            if (loadingDOption) return '';\n            if (loadingACart) return '';\n            if (loadingAShipment) return '';\n\n            if (orderType.type === 'for-delivery') {\n              return React.createElement(Fragment, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }, React.createElement(Menu.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100\n                },\n                __self: this\n              }, \"ORDER TYPE: \", orderType.type.toUpperCase()), React.createElement(Menu.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101\n                },\n                __self: this\n              }, \"TOTAL: P \", subTotal(cart)), React.createElement(Menu.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }, \"DELIVERY FEE: P \", address.fee.toLocaleString()), React.createElement(Menu.Item, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              }, \"GRAND TOTAL: P \", grandTotal(cart, address.fee)));\n            }\n\n            return React.createElement(Fragment, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, React.createElement(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109\n              },\n              __self: this\n            }, \"ORDER TYPE: \", orderType.type.toUpperCase()), React.createElement(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, \"TOTAL: P \", subTotal(cart)), React.createElement(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, \"DELIVERY FEE:\"), React.createElement(Menu.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, \"GRAND TOTAL: P \", subTotal(cart)));\n          });\n        });\n      })))), React.createElement(Divider, {\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: ALL_CART,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, function (_ref7) {\n        var loading = _ref7.loading,\n            data = _ref7.data;\n        if (loading) return '';\n        return React.createElement(Button, {\n          fluid: true,\n          disabled: true,\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \"Submit\");\n      }), React.createElement(Button, {\n        fluid: true,\n        onClick: this.back,\n        style: {\n          marginTop: '0.5em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Back\")));\n    }\n  }]);\n\n  return Confirmation;\n}(Component);\n\nexport default Confirmation;","map":{"version":3,"sources":["/home/dev-marvin/Desktop/new-shit/src/Components/Checkout/Confirmation.js"],"names":["React","Component","Fragment","Form","Divider","Container","Button","Menu","Header","Query","Mutation","ALL_CART","ADDRESS","ORDER_TYPE","ProductConfirm","tray","product","name","toUpperCase","quantity","price","toLocaleString","subTotal","arr","reduce","sum","i","n","grandTotal","hit","m","parseInt","Confirmation","back","e","preventDefault","props","prevStep","delivery","loading","data","console","log","cart","map","x","id","addressId","address","baranggay","municipal","province","zip","deliveryOption","loadingDOption","orderType","loadingACart","loadingAShipment","type","fee","marginTop"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Form, Divider, Container, Button, Menu, Header } from 'semantic-ui-react'\nimport { Query, Mutation } from 'react-apollo'\nimport { ALL_CART, ADDRESS, ORDER_TYPE } from '../../QUERIES/ALL_QUERIES'\n\nconst ProductConfirm = ({tray}) => (\n    <Menu.Item>\n        <Menu.Menu>\n        <Menu.Item>\n            <Header color='orange' size='small'>{tray.product.name.toUpperCase()} X {tray.quantity}\n            </Header>\n        </Menu.Item>\n        <Menu.Item>\n        <Header color='orange' size='small'>P {tray.product.price.toLocaleString()}</Header>\n        </Menu.Item>\n        </Menu.Menu>\n    </Menu.Item>\n)\n\nconst subTotal = (arr) => {\n  return arr.reduce((sum, i) => {\n    let n = sum + (i.product.price * i.quantity)\n    return n.toLocaleString()\n  }, 0)\n}\n\nconst grandTotal = (arr, hit) => {\n  return arr.reduce((sum, i) => {\n    let n = sum + (i.product.price * i.quantity)\n    let m = n + parseInt(hit)\n    return m.toLocaleString()\n  }, 0)\n}\n\nclass Confirmation extends Component{\n    back  = (e) => {\n        e.preventDefault();\n        this.props.prevStep();\n    }\n\n    render() {\n        const { delivery } = this.props\n        return(\n            <Form>\n            <Menu fluid vertical>\n                <Menu.Item>\n                  <Menu.Header>Products</Menu.Header>\n\n                  <Menu.Menu>\n                    <Query query={ALL_CART}>\n                        {({ loading, data}) => {\n                            if (loading) return ''\n                            console.log(data)\n                            return (\n                                <Fragment>\n                                {data.cart.map(x => (\n                                    <ProductConfirm key={x.id} tray={x} />\n                                ))}\n                                </Fragment>\n                            )\n                        }}\n                    </Query>\n                  </Menu.Menu>\n                </Menu.Item>\n\n                <Menu.Item>\n                  <Menu.Header>Address</Menu.Header>\n\n                  <Menu.Menu>\n                    <Query query={ADDRESS} variables={{ id: delivery.addressId }}>\n                        {({ loading, data: { address } }) => {\n                            if (loading) return ''\n                            return (\n                            <Menu.Item>\n                                <Header size='small' color='orange'>\n                                    {address.baranggay.toUpperCase()}, {address.municipal.toUpperCase()}, {address.province.toUpperCase()}, Philippines {address.zip}\n                                </Header>\n                            </Menu.Item>\n                            )\n                        }}\n                    </Query>\n                  </Menu.Menu>\n                </Menu.Item>\n\n                <Menu.Item>\n                  <Menu.Header>Total</Menu.Header>\n                  <Menu.Menu>\n                    <Query query={ORDER_TYPE} variables={{ id: delivery.deliveryOption }}>\n                        {({ loading: loadingDOption, data: { orderType } }) => (\n                            <Query query={ALL_CART}>\n                                {({ loading: loadingACart, data: { cart } }) => (\n                                    <Query query={ADDRESS} variables={{ id: delivery.addressId }}>\n                                        {({ loading: loadingAShipment, data: { address } }) => {\n                                            if (loadingDOption) return ''\n                                            if (loadingACart) return ''\n                                            if (loadingAShipment) return ''\n                                            if (orderType.type === 'for-delivery') {\n                                                return (\n                                                    <Fragment>\n                                                    <Menu.Item>ORDER TYPE: {orderType.type.toUpperCase()}</Menu.Item>\n                                                    <Menu.Item>TOTAL: P {subTotal(cart)}</Menu.Item>\n                                                    <Menu.Item>DELIVERY FEE: P {address.fee.toLocaleString()}</Menu.Item>\n                                                    <Menu.Item>GRAND TOTAL: P {grandTotal(cart, address.fee)}</Menu.Item>\n                                                    </Fragment>\n                                                )\n                                            }\n                                            return (\n                                                <Fragment>\n                                                <Menu.Item>ORDER TYPE: {orderType.type.toUpperCase()}</Menu.Item>\n                                                <Menu.Item>TOTAL: P {subTotal(cart)}</Menu.Item>\n                                                <Menu.Item>DELIVERY FEE:</Menu.Item>\n                                                <Menu.Item>GRAND TOTAL: P {subTotal(cart)}</Menu.Item>\n                                                </Fragment>\n                                            )\n                                        }}\n                                    </Query>\n                                )}\n                            </Query>\n                        )}\n                    </Query>\n                  </Menu.Menu>\n                </Menu.Item>\n              </Menu>\n            <Divider hidden />\n            <Container>\n                <Query query={ALL_CART}>\n                    {({ loading, data}) => {\n                      if (loading) return ''  \n                        return (\n\n                                <Button \n                                    fluid \n                                    disabled\n                                    color='orange'>\n                                    Submit\n                                </Button>\n                        )\n                    }}\n                </Query>\n                <Button fluid onClick={this.back} style={{ marginTop: '0.5em' }}>Back</Button>\n            </Container>\n            </Form>\n        )\n    }\n}\n\nexport default Confirmation"]},"metadata":{},"sourceType":"module"}