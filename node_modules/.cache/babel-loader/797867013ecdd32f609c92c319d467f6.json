{"ast":null,"code":"import _extends from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dev-marvin/Desktop/new-shit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dev-marvin/Desktop/new-shit/src/Pages/SingleProduct.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Query } from 'react-apollo';\nimport { Container, Breadcrumb, Segment, Grid, Image, Header, Label, Input, Loader, Menu } from 'semantic-ui-react';\nimport { AddToButton } from '../Components/Item';\nimport { SINGLE_PRODUCT } from '../QUERIES/ALL_QUERIES';\nimport ProductLogo from '../product.png';\n\nvar SingleProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleProduct, _Component);\n\n  function SingleProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputQuantity: 1\n    };\n\n    _this.changeQuantity = function (_ref) {\n      var value = _ref.target.value,\n          otherEvent = _objectWithoutProperties(_ref, [\"target\"]);\n\n      var quantityEvent = otherEvent.nativeEvent.inputType; // const changeEvent = otherEvent.change\n\n      if (quantityEvent === 'insertText') {\n        if (value >= 99) {\n          _this.setState({\n            inputQuantity: 99\n          });\n        } else {\n          _this.setState({\n            inputQuantity: value\n          });\n        }\n      }\n\n      if (quantityEvent === 'deleteContentBackward') {\n        _this.setState({\n          inputQuantity: null\n        });\n      }\n    };\n\n    _this.minusQuantity = function () {\n      if (_this.state.inputQuantity <= 1) {\n        _this.setState({\n          inputQuantity: 1\n        });\n      } else {\n        _this.setState({\n          inputQuantity: parseInt(_this.state.inputQuantity) - 1\n        });\n      }\n    };\n\n    _this.plusQuantity = function () {\n      if (_this.state.inputQuantity >= 99) {\n        _this.setState({\n          inputQuantity: 99\n        });\n      } else {\n        _this.setState({\n          inputQuantity: parseInt(_this.state.inputQuantity) + 1\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var props = _extends({}, this.props);\n\n      var inputQuantity = this.state.inputQuantity;\n      var isQuantityEmpty = inputQuantity === null || inputQuantity === '' || inputQuantity === 0; // console.log(inputQuantity)\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Segment, {\n        style: {\n          padding: '2em 0em'\n        },\n        vertical: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Query, {\n        query: SINGLE_PRODUCT,\n        variables: {\n          name: props.match.params.id\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, function (_ref2) {\n        var loading = _ref2.loading,\n            data = _ref2.data,\n            error = _ref2.error;\n        if (loading) return React.createElement(Loader, {\n          active: true,\n          inline: \"centered\",\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n        console.log(data);\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Breadcrumb, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Breadcrumb.Section, {\n          as: Link,\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"HOME\"), React.createElement(Breadcrumb.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(Breadcrumb.Section, {\n          as: Link,\n          to: 'categories/' + data.product.category.category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, data.product.category.category.toUpperCase()), React.createElement(Breadcrumb.Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(Breadcrumb.Section, {\n          active: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, data.product.name.toUpperCase()))), React.createElement(Header, {\n          as: \"h2\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(Grid, {\n          container: true,\n          stackable: true,\n          centered: true,\n          columns: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(Grid.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(Grid.Column, {\n          width: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Segment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Image, {\n          centered: true,\n          size: \"medium\",\n          src: ProductLogo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }))), React.createElement(Grid.Column, {\n          width: 6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(Menu, {\n          vertical: true,\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, React.createElement(Header, {\n          size: \"medium\",\n          textAlign: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, data.product.name.toUpperCase()), React.createElement(Menu.Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Header, {\n          size: \"small\",\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"P \", data.product.price)), React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Category:\", React.createElement(Header, {\n          as: Link,\n          to: 'categories/' + data.product.category.category,\n          size: \"tiny\",\n          color: \"orange\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, ' ' + data.product.category.category.toUpperCase())))), React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Menu.Menu, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, \"Quantity: \", '', React.createElement(Input, {\n          labelPosition: \"right\",\n          style: {\n            width: '5em',\n            marginRight: '5em',\n            marginLeft: '0em'\n          },\n          value: inputQuantity,\n          onChange: _this2.changeQuantity,\n          type: \"text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(Label, {\n          as: \"a\",\n          onClick: _this2.minusQuantity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"-\"), React.createElement(\"input\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }), React.createElement(Label, {\n          as: \"a\",\n          onClick: _this2.plusQuantity,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"+\"))), React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(AddToButton, {\n          isQuantityEmpty: isQuantityEmpty,\n          inputQuantity: inputQuantity,\n          id: data.product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        })))), React.createElement(Menu.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, \"Description:\", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, data.product.description)))))));\n      })));\n    }\n  }]);\n\n  return SingleProduct;\n}(Component);\n\nexport default SingleProduct; // <Segment>\n// \t\t\t\t\t\t        <Item>\n// \t\t\t\t\t\t        <Item.Content>\n// \t\t\t\t\t\t\t        <Item.Header><Header size='large' textAlign='center'>{data.product.name.toUpperCase()}</Header></Item.Header>\n// \t\t\t\t\t\t\t        <Item.Meta>\n// \t\t\t\t\t\t\t          <Header size='huge'color='orange'>P {data.product.price}</Header>\n// \t\t\t\t\t\t\t        </Item.Meta>\n// \t\t\t\t\t\t\t        <Item.Description>{data.product.description}</Item.Description>\n// \t\t\t\t\t\t\t      </Item.Content>\n// \t\t\t\t\t\t\t      <Divider hidden/>\n// \t\t\t\t\t\t\t      <Item.Extra>\n// \t\t\t\t\t\t\t          <Label>CETEGORY:</Label>\n// \t\t\t\t\t\t\t          <Label as={Link} to={'categories/' + data.product.category.category} >\n// \t\t\t\t\t\t\t          \t<Header size='small' color='orange'>{data.product.category.category.toUpperCase()} </Header>\n// \t\t\t\t\t\t\t          </Label>\n// \t\t\t\t\t\t\t       </Item.Extra>\n// \t\t\t\t\t\t\t    </Item>\n// \t\t\t\t\t\t\t    <Divider hidden/>\n// \t\t\t\t\t            <Input\n// \t\t\t\t\t            \tlabelPosition='right'\n// \t\t\t\t\t            \tstyle={{ width: '4em',  marginRight: '5em', marginLeft: '0em' }}\n// \t\t\t\t\t            \tvalue={inputQuantity}\n// \t\t\t\t\t            \tonChange={this.changeQuantity}\n// \t\t\t\t\t            \ttype='text'>\n// \t\t\t\t                      <Label\n// \t\t\t\t                      \tas='a'\n// \t\t\t\t                      \tonClick={this.minusQuantity}\n// \t\t\t\t                       >-</Label>\n// \t\t\t\t                      <input />\n// \t\t\t\t                      <Label \n// \t\t\t\t                      \tas='a'\n// \t\t\t\t                      \tonClick={this.plusQuantity}\n// \t\t\t\t                      \t>+</Label>\n// \t\t\t\t                </Input>\n// \t\t\t\t                <AddToButton isQuantityEmpty={isQuantityEmpty} inputQuantity={inputQuantity} id={data.product.id} />\n// \t\t\t\t\t\t      </Segment>","map":{"version":3,"sources":["/home/dev-marvin/Desktop/new-shit/src/Pages/SingleProduct.js"],"names":["React","Component","Fragment","Link","Query","Container","Breadcrumb","Segment","Grid","Image","Header","Label","Input","Loader","Menu","AddToButton","SINGLE_PRODUCT","ProductLogo","SingleProduct","state","inputQuantity","changeQuantity","value","target","otherEvent","quantityEvent","nativeEvent","inputType","setState","minusQuantity","parseInt","plusQuantity","props","isQuantityEmpty","padding","name","match","params","id","loading","data","error","console","log","product","category","toUpperCase","price","width","marginRight","marginLeft","description"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Query } from 'react-apollo'\nimport { Container, Breadcrumb, Segment, Grid, Image, Header, Label, Input, Loader, Menu } from 'semantic-ui-react'\nimport { AddToButton } from '../Components/Item'\nimport { SINGLE_PRODUCT } from '../QUERIES/ALL_QUERIES'\nimport ProductLogo from '../product.png'\n\nclass SingleProduct extends Component {\n\n\tstate={\n\t\tinputQuantity: 1 \n\t}\n\n\tchangeQuantity = ({ target: { value }, ...otherEvent }) => {\n\t\tconst quantityEvent = otherEvent.nativeEvent.inputType\n\t\t// const changeEvent = otherEvent.change\n\t\tif (quantityEvent === 'insertText') {\n\t\t\tif (value >= 99 ) {\n\t\t\t\tthis.setState({ inputQuantity: 99 })\n\t\t\t} else {\n\t\t\tthis.setState({ inputQuantity: value })\n\t\t\t}\n\t\t}\n\t\tif (quantityEvent === 'deleteContentBackward') {\n\t\t\tthis.setState({ inputQuantity: null })\n\t\t}\n\t}\n\n\tminusQuantity = () => {\n\t\tif (this.state.inputQuantity <= 1 ) {\n\t\t\tthis.setState({ inputQuantity: 1 })\n\t\t} else {\n\t\tthis.setState({ inputQuantity: parseInt(this.state.inputQuantity) - 1 })\n\t\t}\n\t}\n\n\tplusQuantity = () => {\n\t\tif (this.state.inputQuantity >= 99 ){\n\t\t\tthis.setState({ inputQuantity: 99 })\n\t\t} else {\n\t\t\tthis.setState({ inputQuantity: parseInt(this.state.inputQuantity) + 1 })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { ...props } = this.props\n\t\tconst { inputQuantity } = this.state\n\t\tconst isQuantityEmpty = inputQuantity === null || inputQuantity === '' || inputQuantity === 0\n\t\t// console.log(inputQuantity)\n\t\t return (\n\t\t\t<Fragment>\n\t\t\t<Segment style={{ padding: '2em 0em' }} vertical>\n\t\t\t\t<Query\n\t\t\t\t\tquery={SINGLE_PRODUCT}\n\t\t\t\t\tvariables={{ name: props.match.params.id }}\n\t\t\t\t>\n\t\t\t\t{({ loading, data, error }) => {\n\t\t\t\t\tif (loading) return <Loader active inline='centered' size='large' />\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t<Breadcrumb>\n\t\t\t\t\t\t\t    <Breadcrumb.Section as={Link} to='/'>HOME</Breadcrumb.Section>\n\t\t\t\t\t\t\t    <Breadcrumb.Divider />\n\t\t\t\t\t\t\t    <Breadcrumb.Section as={Link} to={'categories/'+data.product.category.category}>{data.product.category.category.toUpperCase()}</Breadcrumb.Section>\n\t\t\t\t\t\t\t    <Breadcrumb.Divider />\n\t\t\t\t\t\t\t    <Breadcrumb.Section active>{data.product.name.toUpperCase()}</Breadcrumb.Section>\n\t\t\t\t\t\t\t</Breadcrumb>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t<Header as='h2' textAlign='center'>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Grid container stackable centered columns={2}>\n\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t    <Grid.Column width={8}>\n\t\t\t\t\t\t      <Segment>\n\t\t\t\t\t\t        <Image centered size='medium' src={ProductLogo} />\n\t\t\t\t\t\t      </Segment>\n\t\t\t\t\t\t    </Grid.Column>\n\t\t\t\t\t\t    <Grid.Column width={6}>\n\t\t\t\t\t\t      <Menu vertical fluid>\n\t\t\t\t\t\t        <Menu.Item>\n\t\t\t\t\t\t          <Header size='medium' textAlign='center'>{data.product.name.toUpperCase()}</Header>\n\t\t\t\t\t\t          <Menu.Menu>\n\t\t\t\t\t\t            <Menu.Item>\n\t\t\t\t\t\t            <Header size='small'color='orange'>P {data.product.price}</Header>\n\t\t\t\t\t\t            </Menu.Item>\n\t\t\t\t\t\t            <Menu.Item>\n\t\t\t\t\t\t            \tCategory: \n\t\t\t\t\t\t            \t<Header\n\t\t\t\t\t\t            \t\tas={Link} \n\t\t\t\t\t\t            \t\tto={'categories/' + data.product.category.category}\n\t\t\t\t\t\t            \t\tsize='tiny'\n\t\t\t\t\t\t            \t\tcolor='orange'>\n\t\t\t\t\t\t            \t{' ' + data.product.category.category.toUpperCase()}\n\t\t\t\t\t\t            \t</Header>\n\t\t\t\t\t\t            </Menu.Item>\n\t\t\t\t\t\t          </Menu.Menu>\n\t\t\t\t\t\t        </Menu.Item>\n\t\t\t\t\t\t        <Menu.Item>\n\t\t\t\t\t\t        \t<Menu.Menu>\n\t\t\t\t\t\t        \t\t<Menu.Item>\n\t\t\t\t\t\t        \t\tQuantity: {''}\n\t\t\t\t\t\t        \t\t\t<Input\n\t\t\t\t\t\t\t\t            \tlabelPosition='right'\n\t\t\t\t\t\t\t\t            \tstyle={{ width: '5em',  marginRight: '5em', marginLeft: '0em' }}\n\t\t\t\t\t\t\t\t            \tvalue={inputQuantity}\n\t\t\t\t\t\t\t\t            \tonChange={this.changeQuantity}\n\t\t\t\t\t\t\t\t            \ttype='text'>\n\t\t\t\t\t\t                      <Label\n\t\t\t\t\t\t                      \tas='a'\n\t\t\t\t\t\t                      \tonClick={this.minusQuantity}\n\t\t\t\t\t\t                       >-</Label>\n\t\t\t\t\t\t                      <input />\n\t\t\t\t\t\t                      <Label \n\t\t\t\t\t\t                      \tas='a'\n\t\t\t\t\t\t                      \tonClick={this.plusQuantity}\n\t\t\t\t\t\t                      \t>+</Label>\n\t\t\t\t\t\t\t                </Input>\n\t\t\t\t\t\t        \t\t</Menu.Item>\n\t\t\t\t\t\t        \t\t<Menu.Item>\n\t\t\t\t\t\t        \t\t\t<AddToButton isQuantityEmpty={isQuantityEmpty} inputQuantity={inputQuantity} id={data.product.id} />\n\t\t\t\t\t\t        \t\t</Menu.Item>\n\t\t\t\t\t\t        \t</Menu.Menu>\n\t\t\t\t\t\t        </Menu.Item>\n\t\t\t\t\t\t        <Menu.Item>\n\t\t\t\t\t\t        \tDescription:\n\t\t\t\t\t\t        \t<p>{data.product.description}</p>\n\t\t\t\t\t\t        </Menu.Item>\n\t\t\t\t\t\t       </Menu> \n\t\t\t\t\t\t    </Grid.Column>\n\t\t\t\t\t\t    </Grid.Row>\n\t\t\t\t\t\t  </Grid>\n\t\t\t\t\t</Fragment>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t\t</Query>\n\t\t\t</Segment>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default SingleProduct\n\n// <Segment>\n// \t\t\t\t\t\t        <Item>\n// \t\t\t\t\t\t        <Item.Content>\n// \t\t\t\t\t\t\t        <Item.Header><Header size='large' textAlign='center'>{data.product.name.toUpperCase()}</Header></Item.Header>\n// \t\t\t\t\t\t\t        <Item.Meta>\n// \t\t\t\t\t\t\t          <Header size='huge'color='orange'>P {data.product.price}</Header>\n// \t\t\t\t\t\t\t        </Item.Meta>\n// \t\t\t\t\t\t\t        <Item.Description>{data.product.description}</Item.Description>\n// \t\t\t\t\t\t\t      </Item.Content>\n// \t\t\t\t\t\t\t      <Divider hidden/>\n// \t\t\t\t\t\t\t      <Item.Extra>\n// \t\t\t\t\t\t\t          <Label>CETEGORY:</Label>\n// \t\t\t\t\t\t\t          <Label as={Link} to={'categories/' + data.product.category.category} >\n// \t\t\t\t\t\t\t          \t<Header size='small' color='orange'>{data.product.category.category.toUpperCase()} </Header>\n// \t\t\t\t\t\t\t          </Label>\n// \t\t\t\t\t\t\t       </Item.Extra>\n// \t\t\t\t\t\t\t    </Item>\n// \t\t\t\t\t\t\t    <Divider hidden/>\n// \t\t\t\t\t            <Input\n// \t\t\t\t\t            \tlabelPosition='right'\n// \t\t\t\t\t            \tstyle={{ width: '4em',  marginRight: '5em', marginLeft: '0em' }}\n// \t\t\t\t\t            \tvalue={inputQuantity}\n// \t\t\t\t\t            \tonChange={this.changeQuantity}\n// \t\t\t\t\t            \ttype='text'>\n// \t\t\t\t                      <Label\n// \t\t\t\t                      \tas='a'\n// \t\t\t\t                      \tonClick={this.minusQuantity}\n// \t\t\t\t                       >-</Label>\n// \t\t\t\t                      <input />\n// \t\t\t\t                      <Label \n// \t\t\t\t                      \tas='a'\n// \t\t\t\t                      \tonClick={this.plusQuantity}\n// \t\t\t\t                      \t>+</Label>\n// \t\t\t\t                </Input>\n// \t\t\t\t                <AddToButton isQuantityEmpty={isQuantityEmpty} inputQuantity={inputQuantity} id={data.product.id} />\n// \t\t\t\t\t\t      </Segment>"]},"metadata":{},"sourceType":"module"}